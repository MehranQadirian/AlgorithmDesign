<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AdzYzzvd2s5E3drORN3azkTd2s5E3drORN3a
        zkTd2s5E3drORNzYzzv///8BAAAAAAAAAAAAAAAAAAAAANzY0ULc2M//pqGV/9zYz/+uqZ7/1NDH/8XB
        uP+9uK3/3NjP/6ahlf/c2M//29fPQAAAAAAAAAAAAAAAAAAAAADd3cwPrtPZyrLT2eiy09nostPZ6LLT
        2eiy09nostPZ6LLT2eiy09nortPZyt3dzA8AAAAAAAAAAAAAAAAAAAAAAAAAAAjC/6oudub/HZbx/xub
        8v83Of//Nzr//xua8v8dlvH/Lnbm/wjC/6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwv/BB8H//QfB
        //4IwP/+Jmv//yVr//8Iv//+B8H+/wfB//0Iwf/BAAAAAAAAAAAAAAAAAAAAAAAAAAAGwP92GpvzqVoh
        yvViEcX/YhHF/yOK7fckiu74YhHF/2IRxf9ZIsz0Gp3zqQfB/3MAAAAAAAAAAAAAAAALvP8XBsL/omIQ
        xdliEcX/YhHF/2IRxf8lh+z/JYfs/2IRxf9iEcX/YhHF/2IRxdcGwf+kDMX/FgAAAAAAAAAAB8L/RwjB
        /2NiEcXuYhHF/2IRxf9iEcX/JYfs/yWH7P9iEcX/YhHF/2IRxf9iEcXsCML/ZAfA/0UAAAAAAAAAAAa/
        /ywIwf+EYhHElGIRxf9iEcX/YhHF/w+W+PsPlvj7YhHF/2IRxf9iEcX/YhHFkgjA/4YGwf8pAAAAAAAA
        AAAA//8BCMH/qQ62+jhjEMZvYhHFpCx05q0Hwf/+B8H//i925q1iEcWkYRDFbg23+zkIwf+oAAAAAAAA
        AAAAAAAAAAAAAAC7/w8Hwf+YB8H/rgfB/70Gwf+uB8H//gfB//4Gwv+vB8H/vQfB/64Hwf+XAMj/DgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAe//3QHv/90AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwf/SB8H/0gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACb//HAm//xwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA4AcAAOAHAADgBwAA4AcAAOAHAADAAwAA4AcAAMAD
        AADYGwAA4AcAAP//AAD+fwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/v78E3NjObtzY
        z6nd2M+q3djPqt3Yz6rd2M+q3djPqt3Yz6rd2M+q3djPqt3Yz6rd2M+q3djPqt3Yz6rd2M+q3djPqt3Y
        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
        /3YExP88B8H/+AfB//8Hwf//B8H/9wnC/zsGwf93CMH/ygfB/+cIwf/uB8H/1gjA/4INvP8TAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGxP8rB8D/2wfB/9sGwv8qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwP+rB8D/qwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8H//wfB//8Hwf//B8H//wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwP9VBsD/xwbA/8cGwP9VAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwP9yB8D/cgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////4AAH/8AAA/+AAAH/wAAD/+AAB//gAAf/4A
        AH/+AAB//AAAP/gAAB/6AABf8AAAD/QAAC/kAAAn5AAAJ+YAAGf2AABv8wAAz/n4H5/8YAY//gwwf//+
        f////n////w////+f///////////////////////
</value>
  </data>
</root>